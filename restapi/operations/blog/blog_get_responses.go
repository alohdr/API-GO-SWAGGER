// Code generated by go-swagger; DO NOT EDIT.

package blog

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"LEARN_API_SPEC_SWAGGER/models"
)

// BlogGetOKCode is the HTTP code returned for type BlogGetOK
const BlogGetOKCode int = 200

/*BlogGetOK blog response

swagger:response blogGetOK
*/
type BlogGetOK struct {

	/*
	  In: Body
	*/
	Payload *models.Blogs `json:"body,omitempty"`
}

// NewBlogGetOK creates BlogGetOK with default headers values
func NewBlogGetOK() *BlogGetOK {

	return &BlogGetOK{}
}

// WithPayload adds the payload to the blog get o k response
func (o *BlogGetOK) WithPayload(payload *models.Blogs) *BlogGetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the blog get o k response
func (o *BlogGetOK) SetPayload(payload *models.Blogs) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BlogGetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// BlogGetUnauthorizedCode is the HTTP code returned for type BlogGetUnauthorized
const BlogGetUnauthorizedCode int = 401

/*BlogGetUnauthorized Unauthorized

swagger:response blogGetUnauthorized
*/
type BlogGetUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewBlogGetUnauthorized creates BlogGetUnauthorized with default headers values
func NewBlogGetUnauthorized() *BlogGetUnauthorized {

	return &BlogGetUnauthorized{}
}

// WithPayload adds the payload to the blog get unauthorized response
func (o *BlogGetUnauthorized) WithPayload(payload *models.Error) *BlogGetUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the blog get unauthorized response
func (o *BlogGetUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BlogGetUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// BlogGetPreconditionFailedCode is the HTTP code returned for type BlogGetPreconditionFailed
const BlogGetPreconditionFailedCode int = 412

/*BlogGetPreconditionFailed Precondition Failed

swagger:response blogGetPreconditionFailed
*/
type BlogGetPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewBlogGetPreconditionFailed creates BlogGetPreconditionFailed with default headers values
func NewBlogGetPreconditionFailed() *BlogGetPreconditionFailed {

	return &BlogGetPreconditionFailed{}
}

// WithPayload adds the payload to the blog get precondition failed response
func (o *BlogGetPreconditionFailed) WithPayload(payload *models.Error) *BlogGetPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the blog get precondition failed response
func (o *BlogGetPreconditionFailed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BlogGetPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*BlogGetDefault Unexpected

swagger:response blogGetDefault
*/
type BlogGetDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewBlogGetDefault creates BlogGetDefault with default headers values
func NewBlogGetDefault(code int) *BlogGetDefault {
	if code <= 0 {
		code = 500
	}

	return &BlogGetDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the blog get default response
func (o *BlogGetDefault) WithStatusCode(code int) *BlogGetDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the blog get default response
func (o *BlogGetDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the blog get default response
func (o *BlogGetDefault) WithPayload(payload *models.Error) *BlogGetDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the blog get default response
func (o *BlogGetDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BlogGetDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
