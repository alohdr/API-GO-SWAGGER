// Code generated by go-swagger; DO NOT EDIT.

package blog

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"LEARN_API_SPEC_SWAGGER/models"
)

// BlogCreateCreatedCode is the HTTP code returned for type BlogCreateCreated
const BlogCreateCreatedCode int = 201

/*BlogCreateCreated Blog Created

swagger:response blogCreateCreated
*/
type BlogCreateCreated struct {

	/*
	  In: Body
	*/
	Payload *models.CreateBlogResponse `json:"body,omitempty"`
}

// NewBlogCreateCreated creates BlogCreateCreated with default headers values
func NewBlogCreateCreated() *BlogCreateCreated {

	return &BlogCreateCreated{}
}

// WithPayload adds the payload to the blog create created response
func (o *BlogCreateCreated) WithPayload(payload *models.CreateBlogResponse) *BlogCreateCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the blog create created response
func (o *BlogCreateCreated) SetPayload(payload *models.CreateBlogResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BlogCreateCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// BlogCreateBadRequestCode is the HTTP code returned for type BlogCreateBadRequest
const BlogCreateBadRequestCode int = 400

/*BlogCreateBadRequest Bad Request

swagger:response blogCreateBadRequest
*/
type BlogCreateBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewBlogCreateBadRequest creates BlogCreateBadRequest with default headers values
func NewBlogCreateBadRequest() *BlogCreateBadRequest {

	return &BlogCreateBadRequest{}
}

// WithPayload adds the payload to the blog create bad request response
func (o *BlogCreateBadRequest) WithPayload(payload *models.Error) *BlogCreateBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the blog create bad request response
func (o *BlogCreateBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BlogCreateBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// BlogCreateUnauthorizedCode is the HTTP code returned for type BlogCreateUnauthorized
const BlogCreateUnauthorizedCode int = 401

/*BlogCreateUnauthorized Unauthorized

swagger:response blogCreateUnauthorized
*/
type BlogCreateUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewBlogCreateUnauthorized creates BlogCreateUnauthorized with default headers values
func NewBlogCreateUnauthorized() *BlogCreateUnauthorized {

	return &BlogCreateUnauthorized{}
}

// WithPayload adds the payload to the blog create unauthorized response
func (o *BlogCreateUnauthorized) WithPayload(payload *models.Error) *BlogCreateUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the blog create unauthorized response
func (o *BlogCreateUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BlogCreateUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// BlogCreatePreconditionFailedCode is the HTTP code returned for type BlogCreatePreconditionFailed
const BlogCreatePreconditionFailedCode int = 412

/*BlogCreatePreconditionFailed Precondition Failed

swagger:response blogCreatePreconditionFailed
*/
type BlogCreatePreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewBlogCreatePreconditionFailed creates BlogCreatePreconditionFailed with default headers values
func NewBlogCreatePreconditionFailed() *BlogCreatePreconditionFailed {

	return &BlogCreatePreconditionFailed{}
}

// WithPayload adds the payload to the blog create precondition failed response
func (o *BlogCreatePreconditionFailed) WithPayload(payload *models.Error) *BlogCreatePreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the blog create precondition failed response
func (o *BlogCreatePreconditionFailed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BlogCreatePreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*BlogCreateDefault Unexpected

swagger:response blogCreateDefault
*/
type BlogCreateDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewBlogCreateDefault creates BlogCreateDefault with default headers values
func NewBlogCreateDefault(code int) *BlogCreateDefault {
	if code <= 0 {
		code = 500
	}

	return &BlogCreateDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the blog create default response
func (o *BlogCreateDefault) WithStatusCode(code int) *BlogCreateDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the blog create default response
func (o *BlogCreateDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the blog create default response
func (o *BlogCreateDefault) WithPayload(payload *models.Error) *BlogCreateDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the blog create default response
func (o *BlogCreateDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BlogCreateDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
